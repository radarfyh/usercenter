<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="work.metanet.server.dao.ChannelEarningsMapper">
	
	<sql id="where_channelEarningsList">
		and ce.`status`=true
		<if test="channelId!=null and channelId!=''">
			and ce.channel_id=#{channelId}			
		</if>
		<if test="month!=null and month!=''">
			and ce.`month`=#{month}			
		</if>
		<if test="startTime!=null and startTime!=''">
			and DATE_FORMAT(ce.create_time,'%Y%m%d')>=DATE_FORMAT(#{startTime},'%Y%m%d')
		</if>
		<if test="endTime!=null and endTime!=''">
			and DATE_FORMAT(ce.create_time,'%Y%m%d')<![CDATA[<=]]>DATE_FORMAT(#{endTime},'%Y%m%d')
		</if>
		<if test="remark!=null and remark!=''">
			and ce.remark like CONCAT('%',#{remark},'%')
		</if>
	</sql>
	
	<select id="channelEarningsListSum" resultType="map">
		select
			sum(dt.detailTotal) detailTotal,
			sum(ce.order_pay_total_amount) orderPayTotalAmount,
			sum(ce.original_earnings_total_amount) originalEarningsTotalAmount,
			sum(ce.actual_earnings_total_amount) actualEarningsTotalAmount
		from t_channel_earnings ce
			left join t_channel ch on ch.channel_id=ce.channel_id
			left join (select channel_earnings_id,count(1) detailTotal from t_channel_earnings_detail where status=true GROUP BY channel_earnings_id)dt on dt.channel_earnings_id=ce.channel_earnings_id
		where 1=1
			<include refid="where_channelEarningsList"/>
	</select>
	
	<select id="channelEarningsList" resultType="work.metanet.api.channelEarnings.protocol.ReqChannelEarningsList$RespChannelEarningsList">
		select
			ce.channel_earnings_id,
			ch.channel_name,
			ce.`month`,
			ce.order_pay_total_amount,
			ce.original_earnings_total_amount,
			ce.actual_earnings_total_amount,
			ce.remark,
			dt.detailTotal,
			DATE_FORMAT(ce.create_time,'%Y-%m-%d %H:%i:%s') create_time,
			DATE_FORMAT(ce.update_time,'%Y-%m-%d %H:%i:%s') update_time
		from t_channel_earnings ce
			left join t_channel ch on ch.channel_id=ce.channel_id
			left join (select channel_earnings_id,count(1) detailTotal from t_channel_earnings_detail where status=true GROUP BY channel_earnings_id)dt on dt.channel_earnings_id=ce.channel_earnings_id
		where 1=1
			<include refid="where_channelEarningsList"/>
		order by ce.`month` desc
	</select>
	
</mapper>
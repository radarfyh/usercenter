server.port=8802
spring.profiles.active=dev
spring.application.name=daas-device
spring.main.allow-bean-definition-overriding=true

############################ 自定义 ##############################
metanet.custom.channel.menu.path=menu.json
metanet.custom.sms.warning.phone=13049488783
metanet.custom.sms.business.snCode.maxFailCount=3
metanet.custom.openapi.device.24h.max.auth.number=2
metanet.custom.openapi.token.server.cache.timeout.day=30

############################ spring.cloud.nacos ##############################
spring.cloud.nacos.config.server-addr=127.0.0.1:8848
spring.cloud.nacos.config.group=DEFAULT_GROUP
spring.cloud.nacos.config.namespace=f7c685e5-24eb-4be5-af83-6366b9595bd4
spring.cloud.nacos.config.file-extension=properties
spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848
spring.cloud.nacos.discovery.group=DEFAULT_GROUP
spring.cloud.nacos.discovery.namespace=f7c685e5-24eb-4be5-af83-6366b9595bd4
spring.cloud.nacos.discovery.ip=127.0.0.1


############################ seata ##############################
seata.enabled=true
seata.application-id=${spring.application.name}
spring.cloud.alibaba.seata.tx-service-group=${spring.application.name}
seata.service.vgroup-mapping.daas-device=default
seata.service.grouplist.default=127.0.0.1:8091
seata.service.disable-global-transaction=false

############################ dubbo ##############################
dubbo.protocol.name=dubbo
dubbo.protocol.port=-1
#dubbo.application.qosEnable=false
#重试次数
#dubbo.provider.retries=0
#服务超时时间
#dubbo.provider.timeout=60000
#负载均衡策略-轮询
#dubbo.provider.loadbalance=roundrobin
#dubbo.consumer.check=false
dubbo.scan.base-packages=work.metanet.server.service
#dubbo.cloud.subscribed-services=${spring.application.name}
#dubbo.registry.address=spring-cloud://localhost
dubbo.registry.address=nacos://localhost:8848

############################ datasource ##############################
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/luoxi?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true
spring.datasource.username=root
spring.datasource.password=Radar.wind1
spring.datasource.druid.initial-size=5
spring.datasource.druid.min-idle=5
spring.datasource.druid.max-active=200
spring.datasource.druid.max-wait=60000
spring.datasource.druid.time-between-eviction-runs-millis=60000
spring.datasource.druid.min-evictable-idle-time-millis=300000
spring.datasource.druid.validation-query=SELECT 1 FROM DUAL
spring.datasource.druid.test-while-idle=true
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
spring.datasource.druid.filters=config,stat,log4j
spring.datasource.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
spring.datasource.druid.stat-view-servlet.login-username=admin
spring.datasource.druid.stat-view-servlet.login-password=admin
spring.datasource.druid.stat-view-servlet.reset-enable=false
spring.datasource.druid.stat-view-servlet.allow=*
spring.datasource.druid.stat-view-servlet.deny=none

############################ MyBatis ##############################
#mybatis.type-aliases-package=com.a.model;com.b.model
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.configuration.call-setters-on-nulls=true
mapper.mappers=tk.mybatis.mapper.common.Mapper
#打印sql
#mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
mapper.not-empty=false
mapper.identity=MYSQL

############################ Redis ##############################
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.password=radar
spring.redis.lettuce.pool.max-idle=30
spring.redis.lettuce.pool.min-idle=10
spring.redis.lettuce.pool.max-active=30
spring.redis.lettuce.pool.max-wait=10000
spring.redis.database=2

############################ Mongodb ##############################
spring.data.mongodb.uri=mongodb://metanet:radar@127.0.0.1:27017/metanet
spring.data.mongodb.option.min-connection-per-host=0
spring.data.mongodb.option.max-connection-per-host=100
spring.data.mongodb.option.threads-allowed-to-block-for-connection-multiplier=5
spring.data.mongodb.option.server-selection-timeout=30000
spring.data.mongodb.option.max-wait-time=120000
spring.data.mongodb.option.max-connection-idle-time=300000
spring.data.mongodb.option.max-connection-life-time=0
spring.data.mongodb.option.connect-timeout=10000
spring.data.mongodb.option.socket-timeout=0
spring.data.mongodb.option.socket-keep-alive=false
spring.data.mongodb.option.ssl-enabled=false
spring.data.mongodb.option.ssl-invalid-host-name-allowed=false
spring.data.mongodb.option.always-use-m-beans=false
spring.data.mongodb.option.heartbeat-socket-timeout=20000
spring.data.mongodb.option.heartbeat-connect-timeout=20000
spring.data.mongodb.option.min-heartbeat-frequency=500
spring.data.mongodb.option.heartbeat-frequency=10000
spring.data.mongodb.option.local-threshold=15

############################ 腾讯云 ##############################
tencent.cloud.accessKey=XXX
tencent.cloud.secretKey=YYY
########## 腾讯云Cos ##########
tencent.cloud.cos.bucketName=123456
tencent.cloud.cos.region=ap-guangzhou
########## 腾讯云Sms ##########
tencent.cloud.sms.appid=123456
tencent.cloud.sms.region=ap-guangzhou

############################ Quartz ##############################
#spring.quartz.jdbc.schema=classpath:tables_mysql_innodb.sql
#spring.quartz.jdbc.initialize-schema=never
##集群只在存储方式是jobstore才有效
spring.quartz.job-store-type=jdbc
##同样名字的job在插入到表中会报错，设置为true会覆盖之前相同名字的job
spring.quartz.overwrite-existing-jobs=true
#当spring关闭时,会等待所有已经启动的quartz job结束后spring才能完全shutdown
spring.quartz.wait-for-jobs-to-complete-on-shutdown=true
#延迟启动
spring.quartz.startup-delay=10s
spring.quartz.properties.org.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX
##配置集群的话，必须实例名一样
spring.quartz.properties.org.quartz.scheduler.instanceName = MetanetClusteredScheduler
##根据主机以及时间戳生成实例id
spring.quartz.properties.org.quartz.scheduler.instanceId = AUTO
spring.quartz.properties.org.quartz.threadPool.class = org.quartz.simpl.SimpleThreadPool
#spring.quartz.properties.org.quartz.threadPool.threadCount = 5
##mysql使用的驱动代理
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.StdJDBCDelegate
spring.quartz.properties.org.quartz.jobStore.tablePrefix=QRTZ_
##开启集群配置
spring.quartz.properties.org.quartz.jobStore.isClustered=true
spring.quartz.properties.org.quartz.plugin.shutdownHook.class=org.quartz.plugins.management.ShutdownHookPlugin
spring.quartz.properties.org.quartz.plugin.shutdownHook.cleanShutdown=TRUE

############################ Kafka ##############################
#spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.listener.missing-topics-fatal=false
#---provider---
#重试次数
#spring.kafka.producer.retries=0
# 每次批量发送消息的数量
#spring.kafka.producer.batch-size=16384
#spring.kafka.producer.buffer-memory=33554432
#---consumer---
# 指定默认消费者group id
#spring.kafka.consumer.group-id=default-consumer-group
#从最近的地方开始消费
#spring.kafka.consumer.auto-offset-reset=latest
#自动提交
#spring.kafka.consumer.enable-auto-commit=true